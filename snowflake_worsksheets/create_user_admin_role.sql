--- #### USER_ADMIN_ROLE
USE ROLE USERADMIN;
CREATE ROLE IF NOT EXISTS USER_ADMIN_ROLE;
USE ROLE SECURITYADMIN;

--- #### GRANTING ROLES
GRANT ROLE USER_ADMIN_ROLE TO USER sodahb;
GRANT ROLE USER_ADMIN_ROLE TO USER jassef;


--- #### USERS LAYER GRANTS
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE USER_ADMIN_ROLE;
GRANT USAGE ON DATABASE apartment_watcher TO ROLE USER_ADMIN_ROLE;
GRANT USAGE ON SCHEMA apartment_watcher.USERS TO ROLE USER_ADMIN_ROLE;
GRANT CREATE TABLE ON SCHEMA apartment_watcher.USERS TO ROLE USER_ADMIN_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA apartment_watcher.USERS TO ROLE USER_ADMIN_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON FUTURE TABLES IN SCHEMA apartment_watcher.USERS TO ROLE USER_ADMIN_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL VIEWS IN SCHEMA apartment_watcher.USERS TO ROLE USER_ADMIN_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON FUTURE VIEWS IN SCHEMA apartment_watcher.USERS TO ROLE USER_ADMIN_ROLE;
GRANT TRUNCATE ON ALL TABLES IN SCHEMA apartment_watcher.USERS TO ROLE USER_ADMIN_ROLE;
GRANT TRUNCATE ON FUTURE TABLES IN SCHEMA apartment_watcher.USERS TO ROLE USER_ADMIN_ROLE;

--- #### Testing
USE ROLE USER_ADMIN_ROLE;
USE WAREHOUSE COMPUTE_WH;
USE DATABASE apartment_watcher;
CREATE TABLE IF NOT EXISTS USERS.test(
    test INTEGER PRIMARY KEY
);
INSERT INTO USERS.test (test) 
VALUES(2);

SELECT * FROM USERS.test;
DROP TABLE USERS.test;


--- #### SHOW GRANTS

USE ROLE SECURITYADMIN;
SHOW GRANTS TO ROLE USER_ADMIN_ROLE;
SHOW GRANTS ON SCHEMA apartment_watcher.USERS;